version: '3.1'

services:
  frontend:
    image: endaaman/endaaman.me
    container_name: endaaman-frontend
    restart: always
    environment:
      - SSL=${SSL:-SSL} # default: "SSL"
      - VIRTUAL_HOST=endaaman.me,endaaman.test
      - LETSENCRYPT_HOST=endaaman.me
      - LETSENCRYPT_EMAIL=buhibuhidog@gmail.com
    networks:
      - proxy-tier

  backend:
    image: endaaman/api.endaaman.me
    container_name: endaaman-backend
    restart: always
    environment:
      - VIRTUAL_HOST=api.endaaman.me,static.endaaman.me,api.endaaman.test,static.endaaman.test
      - LETSENCRYPT_HOST=api.endaaman.me,static.endaaman.me
      - LETSENCRYPT_EMAIL=buhibuhidog@gmail.com
    volumes:
      - endaaman-data:/var/www/shared
    networks:
      - proxy-tier

  nextcloud-db:
    image: mariadb:10
    container_name: nextcloud-db
    restart: always
    volumes:
      - nextcloud-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=nextcloud
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=nextcloud
    networks:
      - nextcloud-tier

  nextcloud-app:
    image: nextcloud:stable-fpm
    container_name: nextcloud-app
    restart: always
    volumes:
      - endaaman-data:/var/www/externals/endaaman
      - nextcloud-app:/var/www/html
    environment:
      - MYSQL_HOST=nextcloud-db
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=nextcloud
    # fix for access granting
    # command: sh -c "./occ config:system:set overwriteprotocol -- value='https' && /entrypoint.sh"
    # $ docker exec -u www-data nextcloud-app bash -c './occ config:system:set overwriteprotocol --value="https"'
    depends_on:
      - nextcloud-db
    networks:
      - nextcloud-tier

  nextcloud-web:
    image: nginx:1.17
    container_name: nextcloud-web
    restart: always
    volumes:
      - nextcloud-app:/var/www/html:ro
      - ./nextcloud/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - VIRTUAL_HOST=nc.endaaman.me
      - LETSENCRYPT_HOST=nc.endaaman.me
      - LETSENCRYPT_EMAIL=buhibuhidog@gmail.com
    depends_on:
      - nextcloud-app
    networks:
      - proxy-tier
      - nextcloud-tier

  misskey-app:
    image: endaaman/misskey
    container_name: misskey-app
    restart: always
    networks:
      - misskey-tier
    # links:
    #   - misskey-db:mongo
    #   - misskey-redis:redis
    volumes:
      - ./misskey/default.yml:/misskey/.config/default.yml:ro
    depends_on:
      - misskey-redis
      - misskey-db

  misskey-redis:
    image: redis:4.0-alpine
    container_name: misskey-redis
    restart: always
    networks:
      - misskey-tier
    volumes:
      - misskey-redis:/data

  misskey-db:
    image: mongo:4.1
    container_name: misskey-db
    restart: always
    networks:
      - misskey-tier
    environment:
      MONGO_INITDB_DATABASE: misskey
      MONGO_INITDB_ROOT_PASSWORD: misskey
      MONGO_INITDB_ROOT_USERNAME: misskey
    volumes:
      - misskey-db:/data
      - ./misskey/mongo.js:/docker-entrypoint-initdb.d/mongo_initdb.js:ro

  misskey-web:
    image: nginx:1.17
    container_name: misskey-web
    restart: always
    volumes:
      - ./misskey/nginx.conf:/etc/nginx/conf.d/misskey.conf:ro
    environment:
      - VIRTUAL_HOST=misskey.endaaman.me,misskey.endaaman.test
      - LETSENCRYPT_HOST=misskey.endaaman.me
      - LETSENCRYPT_EMAIL=buhibuhidog@gmail.com
    # depends_on:
    #   - misskey-app
    links:
      - misskey-app
    networks:
      - proxy-tier
      - misskey-tier

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    volumes:
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - /var/le-certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro
    labels:
      - 'com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy'
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy-tier

  nginx-proxy-le-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le-companion
    restart: always
    volumes:
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - /var/le-certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    # volumes_from:
    #   - nginx-proxy
    networks:
      - proxy-tier
    depends_on:
      - nginx-proxy

volumes:
  nextcloud-db:
  nextcloud-app:
  endaaman-data:
  misskey-db:
  misskey-redis:
  nginx-html:
  nginx-vhost:

networks:
  proxy-tier:
  nextcloud-tier:
  misskey-tier:
